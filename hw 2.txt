Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. - заходим на свой акк в гитхабе и жмём new repozitory, 
задаём название и жмём create repozitory.
 5. Клонировать репозиторий JSON на локальный компьютер. - открываем репозитори жмём code, затем копиуем ссылку, 
затем команда в гитбаше git clone https://github.com/Azik-Chicha/JSON.git
 6. Внутри локального JSON создать файл “new.json”. - 1) cd JSON 2)touch new.json
 7. Добавить файл под гит. - git add new.json
 8. Закоммитить файл. - git commit -m "personal info"
 9. Отправить файл на внешний GitHub репозиторий. -  git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.  - 1)vim new.json 2)i затем пишем инфу. 3)esc :wq
 11. Отправить изменения на внешний репозиторий. - 1) git add new.json 2)git commit -m "personal info" 3)git push
 12. Создать файл preferences.json -  vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. - 
	1)i затем ввод текста 2)esc :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - 
		1)vim skills.json 2)i затем ввод текста 2)esc :wq
 15. Отправить сразу 2 файла на внешний репозиторий. - 1)git add . 2)git commit -m "other information" 3)git push
 16. На веб интерфейсе создать файл bug_report.json - 1) открываем ветку JSON 2) жмём add file 3) create new file 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - задаём название и жмём commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. - 1) открываем файл нажатием на его название 2) нажимаем кнопку "Edit this file" 3) вводим текст баг репорта 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - нажимаем кнопку "Commit changes"
 20. Синхронизировать внешний и локальный репозиторий JSON -  1) в гит хабе заходим в папку JSON 2) жмём кнопку "Code" и копируем появившуюся ссылку 3) в терминале заходим в папкуJSON 4) команда git pull https://github.com/Azik-Chicha/JSON.git


XML
 21. Создать внешний репозиторий c названием XML. - заходим на свой акк в гитхабе и жмём new repozitory, 
задаём название и жмём create repozitory.
 22. Клонировать репозиторий XML на локальный компьютер. - открываем репозитори жмём code, затем копиуем ссылку, 
затем команда в гитбаше git clone https://github.com/Azik-Chicha/XML.git
 23. Внутри локального XML создать файл “new.xml”. - 1) cd XML 2)touch new.xml
 24. Добавить файл под гит. - git add new.xml
 25. Закоммитить файл. - git commit -m "about" 
 26. Отправить файл на внешний GitHub репозиторий. - git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. - 1)vim new.xml 		2)i затем пишем инфу. 3)esc :wq
 28. Отправить изменения на внешний репозиторий. - 1) git add new.xml 2)git commit -m "about" 3)git push
 29. Создать файл preferences.xml - vim preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. - 
	1)i затем ввод текста 2)esc :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - 1)vim skills.xml 2)i затем ввод текста 2)esc :wq
 32. Сделать коммит в одну строку. - 1)git add . 2)git commit -m "other info"
 33. Отправить сразу 2 файла на внешний репозиторий. - git push
 34. На веб интерфейсе создать файл bug_report.xml. - 1) открываем ветку XML 2) жмём add file 3) create new file 
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - задаём название и жмём commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. - 1) открываем файл нажатием на его название 2) нажимаем кнопку "Edit this file" 3) вводим текст баг репорта
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - нажимаем кнопку "Commit changes"
 38. Синхронизировать внешний и локальный репозиторий XML - 1) в гит хабе заходим в папку XML 2) жмём кнопку "Code" и копируем появившуюся ссылку 3) в терминале заходим в папку XML 
	4) команда git pull https://github.com/Azik-Chicha/XML.git
TXT
 1. Создать внешний репозиторий c названием TXT. - заходим на свой акк в гитхабе и жмём new repozitory, задаём название и жмём create repozitory.
 2. Клонировать репозиторий TXT на локальный компьютер. - открываем репозитори жмём code, затем копиуем ссылку, затем команда в гитбаше git clone https://github.com/Azik-Chicha/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
 4. Добавить файл под гит. - 1) cd XML 2)touch new.txt
 5. Закоммитить файл. - git add new.txt
 6. Отправить файл на внешний GitHub репозиторий. - git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. - 1)vim new.txt 2)i затем пишем инфу. 3)esc :wq
 8. Отправить изменения на внешний репозиторий. - 1) git add new.txt 2)git commit -m "about" 3)git push
 9. Создать файл preferences.txt - vim preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. - 1)i затем ввод текста 2)esc :wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - 1)vim skills.txt 2)i затем ввод текста 2)esc :wq
 12. Сделать коммит в одну строку. - 1)git add . 2)git commit -m "other info"
 13. Отправить сразу 2 файла на внешний репозиторий. - git push
 14. На веб интерфейсе создать файл bug_report.txt. - 1) открываем ветку TXT 2) жмём add file 3) create new file 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - задаём название и жмём commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. - 1) открываем файл нажатием на его название 2) нажимаем кнопку "Edit this file" 3) вводим текст баг репорта
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. -  нажимаем кнопку "Commit changes"
 18. Синхронизировать внешний и локальный репозиторий TXT - 1) в гит хабе заходим в папку TXT 2) жмём кнопку "Code" и копируем появившуюся ссылку 3) в терминале заходим в папку TXT 4) команда git pull https://github.com/Azik-Chicha/TXT.git